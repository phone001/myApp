name: last nset build # 현재 제목

on: # 이벤트를 등록
  push: # push 이벤트가 발생하면
    branches: # branches 어떤 브랜치에 이벤트가 일어났을 대 작업을 동작
      - master

jobs: # 작업의 단위
  kimBuild: # 식별자
    runs-on: ubuntu-latest # 러너에서 사용할 os latest 최신 버전 사용하겠다.

    steps: # 작업의 가장 작은 단위
      - name: checkout # 작업의 작은 단위의 이름
        uses: actions/checkout@v4 # 레파지토리 체크아웃 할 수 있게 도와주는 라이브러리
        # 브랜치에 있는 내용을 클론해온다. 워크 플로우에

      - name: set up node # uses 라이브러리를 사용할 것을 가져오고 with는 라이브러리의 속성설정
        uses: actions/setup-node@v4 # 노드버전을 가져오고
        with:
          node-version: "20" # 20 버전의 노드 런타임 환경을 제공

      # 가상머신의 경로는 /home/runner
      # runner는 가상머신의 이름으로 os는 똑같고 그 안에 work 디렉터리 위에서 동작한다.
      - name: test # 의존성 설치하기 전에 폴더 구조 확인
        run: |
          ls 
          pwd

      - name: npm install
        run: |
          cd myApp
          npm install

      - name: build nest
        run: |
          cd myApp
          npm run build

      - name: build test
        run: |
          ls
          pwd
          cd dist
          ls
          pwd
